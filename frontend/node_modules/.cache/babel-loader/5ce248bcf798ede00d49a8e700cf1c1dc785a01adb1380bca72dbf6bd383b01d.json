{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\final_api\\\\frontend\\\\src\\\\components\\\\ResultsView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Paper, Typography, Grid, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Collapse, Alert, CircularProgress, Button } from '@mui/material';\nimport { Warning as WarningIcon, CheckCircle as CheckCircleIcon, Error as ErrorIcon, ExpandMore as ExpandMoreIcon, Download as DownloadIcon } from '@mui/icons-material';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst severityColor = severity => {\n  switch (severity.toLowerCase()) {\n    case 'critical':\n      return 'error';\n    case 'high':\n      return 'error';\n    case 'medium':\n      return 'warning';\n    case 'low':\n      return 'info';\n    default:\n      return 'default';\n  }\n};\nconst vulnerabilityRecommendations = {\n  xss: [\"Implement context-aware output encoding\", \"Use Content Security Policy (CSP) headers\", \"Validate and sanitize all user inputs\", \"Set HttpOnly and Secure flags on cookies\"],\n  sql_injection: [\"Use prepared statements with parameterized queries\", \"Implement strict input validation\", \"Use ORM frameworks for database access\", \"Regularly update database software\"],\n  missing_security_headers: [\"Add Content-Security-Policy header\", \"Implement Strict-Transport-Security\", \"Set X-Content-Type-Options to 'nosniff'\", \"Configure X-Frame-Options to 'DENY'\"]\n};\nexport default function ResultsView({\n  scanId,\n  onResults\n}) {\n  _s();\n  const [status, setStatus] = useState('pending');\n  const [data, setData] = useState(null);\n  const [expandedVuln, setExpandedVuln] = useState(null);\n  const generatePdfReport = () => {\n    const doc = new jsPDF();\n\n    // Add Report Header\n    doc.setFontSize(20);\n    doc.setTextColor(33, 150, 243); // Blue color\n    doc.setFont('helvetica', 'bold');\n    doc.text('Security Scan Report', 15, 20);\n\n    // Add Scan Metadata\n    doc.setFontSize(12);\n    doc.setTextColor(0, 0, 0); // Black color\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Scan ID: ${scanId}`, 15, 30);\n    doc.text(`Scanned URL: ${data.base_url}`, 15, 35);\n    doc.text(`Scan Date: ${new Date().toLocaleString()}`, 15, 40);\n\n    // Add Statistics Section\n    doc.setFontSize(14);\n    doc.setTextColor(33, 150, 243); // Blue color\n    doc.setFont('helvetica', 'bold');\n    doc.text('Scan Statistics', 15, 50);\n    doc.setFontSize(12);\n    doc.setTextColor(0, 0, 0); // Black color\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Pages Scanned: ${data.pages_scanned}`, 15, 60);\n    doc.text(`Forms Found: ${data.forms_found}`, 15, 65);\n    doc.text(`Vulnerabilities Detected: ${data.vulnerabilities.length}`, 15, 70);\n\n    // Add Vulnerabilities Section\n    doc.setFontSize(14);\n    doc.setTextColor(33, 150, 243); // Blue color\n    doc.setFont('helvetica', 'bold');\n    doc.text('Vulnerability Details', 15, 80);\n    const vulnData = data.vulnerabilities.map((vuln, index) => [index + 1, vuln.vulnerability_type, vuln.severity, vuln.url, [...vuln.recommendation.split('. '), ...(vulnerabilityRecommendations[vuln.vulnerability_type.toLowerCase()] || [])].filter(r => r.trim()).join('\\n')]);\n    doc.autoTable({\n      startY: 85,\n      head: [['#', 'Type', 'Severity', 'Location', 'Recommendations']],\n      body: vulnData,\n      theme: 'grid',\n      styles: {\n        fontSize: 10,\n        cellPadding: 2,\n        overflow: 'linebreak'\n      },\n      headStyles: {\n        fillColor: [33, 150, 243],\n        // Blue header\n        textColor: [255, 255, 255],\n        // White text\n        fontStyle: 'bold'\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 10\n        },\n        // Index column\n        1: {\n          cellWidth: 30\n        },\n        // Type column\n        2: {\n          cellWidth: 20\n        },\n        // Severity column\n        3: {\n          cellWidth: 40\n        },\n        // Location column\n        4: {\n          cellWidth: 90\n        } // Recommendations column\n      }\n    });\n\n    // Add Subdomains Section\n    doc.setFontSize(14);\n    doc.setTextColor(33, 150, 243); // Blue color\n    doc.setFont('helvetica', 'bold');\n    doc.text('Discovered Subdomains', 15, doc.autoTable.previous.finalY + 10);\n    const subdomainData = data.subdomains.map((sub, index) => [index + 1, sub.subdomain, sub.status, sub.ip_address || 'N/A', sub.server || 'Unknown']);\n    doc.autoTable({\n      startY: doc.autoTable.previous.finalY + 15,\n      head: [['#', 'Subdomain', 'Status', 'IP Address', 'Server']],\n      body: subdomainData,\n      theme: 'grid',\n      styles: {\n        fontSize: 10,\n        cellPadding: 2,\n        overflow: 'linebreak'\n      },\n      headStyles: {\n        fillColor: [33, 150, 243],\n        // Blue header\n        textColor: [255, 255, 255],\n        // White text\n        fontStyle: 'bold'\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 10\n        },\n        // Index column\n        1: {\n          cellWidth: 50\n        },\n        // Subdomain column\n        2: {\n          cellWidth: 20\n        },\n        // Status column\n        3: {\n          cellWidth: 40\n        },\n        // IP Address column\n        4: {\n          cellWidth: 40\n        } // Server column\n      }\n    });\n\n    // Save the PDF\n    doc.save(`security_report_${scanId}.pdf`);\n  };\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/scan/${scanId}`);\n        const result = await response.json();\n        setStatus(result.status);\n        if (result.status === 'completed') {\n          setData(result.results);\n          onResults(result.results);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    const interval = setInterval(checkStatus, 2000);\n    return () => clearInterval(interval);\n  }, [scanId]);\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        borderRadius: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60,\n          thickness: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          children: \"Scanning in progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: \"This may take a few minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        borderRadius: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 39\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Scan Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Please try again or check your network connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 4,\n      borderRadius: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          fontWeight: 600\n        },\n        children: \"Scan Results Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 22\n        }, this),\n        onClick: generatePdfReport,\n        sx: {\n          borderRadius: 2\n        },\n        children: \"Download Full Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsView, \"dNNt6qAHY2IxxMIl3W+GX9/w/TE=\");\n_c = ResultsView;\nvar _c;\n$RefreshReg$(_c, \"ResultsView\");","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Grid","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Collapse","Alert","CircularProgress","Button","Warning","WarningIcon","CheckCircle","CheckCircleIcon","Error","ErrorIcon","ExpandMore","ExpandMoreIcon","Download","DownloadIcon","jsPDF","jsxDEV","_jsxDEV","severityColor","severity","toLowerCase","vulnerabilityRecommendations","xss","sql_injection","missing_security_headers","ResultsView","scanId","onResults","_s","status","setStatus","data","setData","expandedVuln","setExpandedVuln","generatePdfReport","doc","setFontSize","setTextColor","setFont","text","base_url","Date","toLocaleString","pages_scanned","forms_found","vulnerabilities","length","vulnData","map","vuln","index","vulnerability_type","url","recommendation","split","filter","r","trim","join","autoTable","startY","head","body","theme","styles","fontSize","cellPadding","overflow","headStyles","fillColor","textColor","fontStyle","columnStyles","cellWidth","previous","finalY","subdomainData","subdomains","sub","subdomain","ip_address","server","save","checkStatus","response","fetch","result","json","results","error","console","interval","setInterval","clearInterval","elevation","sx","p","borderRadius","textAlign","children","display","flexDirection","alignItems","gap","size","thickness","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","icon","justifyContent","mb","fontWeight","startIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/final_api/frontend/src/components/ResultsView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  Collapse,\r\n  Alert,\r\n  CircularProgress,\r\n  Button\r\n} from '@mui/material';\r\nimport {\r\n  Warning as WarningIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Error as ErrorIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Download as DownloadIcon\r\n} from '@mui/icons-material';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst severityColor = (severity) => {\r\n  switch(severity.toLowerCase()) {\r\n    case 'critical': return 'error';\r\n    case 'high': return 'error';\r\n    case 'medium': return 'warning';\r\n    case 'low': return 'info';\r\n    default: return 'default';\r\n  }\r\n};\r\n\r\nconst vulnerabilityRecommendations = {\r\n  xss: [\r\n    \"Implement context-aware output encoding\",\r\n    \"Use Content Security Policy (CSP) headers\",\r\n    \"Validate and sanitize all user inputs\",\r\n    \"Set HttpOnly and Secure flags on cookies\"\r\n  ],\r\n  sql_injection: [\r\n    \"Use prepared statements with parameterized queries\",\r\n    \"Implement strict input validation\",\r\n    \"Use ORM frameworks for database access\",\r\n    \"Regularly update database software\"\r\n  ],\r\n  missing_security_headers: [\r\n    \"Add Content-Security-Policy header\",\r\n    \"Implement Strict-Transport-Security\",\r\n    \"Set X-Content-Type-Options to 'nosniff'\",\r\n    \"Configure X-Frame-Options to 'DENY'\"\r\n  ]\r\n};\r\n\r\nexport default function ResultsView({ scanId, onResults }) {\r\n  const [status, setStatus] = useState('pending');\r\n  const [data, setData] = useState(null);\r\n  const [expandedVuln, setExpandedVuln] = useState(null);\r\n\r\n  const generatePdfReport = () => {\r\n    const doc = new jsPDF();\r\n\r\n    // Add Report Header\r\n    doc.setFontSize(20);\r\n    doc.setTextColor(33, 150, 243); // Blue color\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Security Scan Report', 15, 20);\r\n\r\n    // Add Scan Metadata\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.text(`Scan ID: ${scanId}`, 15, 30);\r\n    doc.text(`Scanned URL: ${data.base_url}`, 15, 35);\r\n    doc.text(`Scan Date: ${new Date().toLocaleString()}`, 15, 40);\r\n\r\n    // Add Statistics Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(33, 150, 243); // Blue color\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Scan Statistics', 15, 50);\r\n\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.text(`Pages Scanned: ${data.pages_scanned}`, 15, 60);\r\n    doc.text(`Forms Found: ${data.forms_found}`, 15, 65);\r\n    doc.text(`Vulnerabilities Detected: ${data.vulnerabilities.length}`, 15, 70);\r\n\r\n    // Add Vulnerabilities Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(33, 150, 243); // Blue color\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Vulnerability Details', 15, 80);\r\n\r\n    const vulnData = data.vulnerabilities.map((vuln, index) => [\r\n      index + 1,\r\n      vuln.vulnerability_type,\r\n      vuln.severity,\r\n      vuln.url,\r\n      [...vuln.recommendation.split('. '), ...(vulnerabilityRecommendations[vuln.vulnerability_type.toLowerCase()] || [])]\r\n        .filter(r => r.trim())\r\n        .join('\\n')\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      startY: 85,\r\n      head: [['#', 'Type', 'Severity', 'Location', 'Recommendations']],\r\n      body: vulnData,\r\n      theme: 'grid',\r\n      styles: { \r\n        fontSize: 10,\r\n        cellPadding: 2,\r\n        overflow: 'linebreak'\r\n      },\r\n      headStyles: { \r\n        fillColor: [33, 150, 243], // Blue header\r\n        textColor: [255, 255, 255], // White text\r\n        fontStyle: 'bold'\r\n      },\r\n      columnStyles: {\r\n        0: { cellWidth: 10 }, // Index column\r\n        1: { cellWidth: 30 }, // Type column\r\n        2: { cellWidth: 20 }, // Severity column\r\n        3: { cellWidth: 40 }, // Location column\r\n        4: { cellWidth: 90 }  // Recommendations column\r\n      }\r\n    });\r\n\r\n    // Add Subdomains Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(33, 150, 243); // Blue color\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Discovered Subdomains', 15, doc.autoTable.previous.finalY + 10);\r\n\r\n    const subdomainData = data.subdomains.map((sub, index) => [\r\n      index + 1,\r\n      sub.subdomain,\r\n      sub.status,\r\n      sub.ip_address || 'N/A',\r\n      sub.server || 'Unknown'\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      startY: doc.autoTable.previous.finalY + 15,\r\n      head: [['#', 'Subdomain', 'Status', 'IP Address', 'Server']],\r\n      body: subdomainData,\r\n      theme: 'grid',\r\n      styles: { \r\n        fontSize: 10,\r\n        cellPadding: 2,\r\n        overflow: 'linebreak'\r\n      },\r\n      headStyles: { \r\n        fillColor: [33, 150, 243], // Blue header\r\n        textColor: [255, 255, 255], // White text\r\n        fontStyle: 'bold'\r\n      },\r\n      columnStyles: {\r\n        0: { cellWidth: 10 }, // Index column\r\n        1: { cellWidth: 50 }, // Subdomain column\r\n        2: { cellWidth: 20 }, // Status column\r\n        3: { cellWidth: 40 }, // IP Address column\r\n        4: { cellWidth: 40 }  // Server column\r\n      }\r\n    });\r\n\r\n    // Save the PDF\r\n    doc.save(`security_report_${scanId}.pdf`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkStatus = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/scan/${scanId}`);\r\n        const result = await response.json();\r\n        \r\n        setStatus(result.status);\r\n        if (result.status === 'completed') {\r\n          setData(result.results);\r\n          onResults(result.results);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(checkStatus, 2000);\r\n    return () => clearInterval(interval);\r\n  }, [scanId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <Paper elevation={3} sx={{ p: 4, borderRadius: 4, textAlign: 'center' }}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\r\n          <CircularProgress size={60} thickness={4} />\r\n          <Typography variant=\"h6\" color=\"textSecondary\">\r\n            Scanning in progress...\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            This may take a few minutes\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  if (status === 'failed') {\r\n    return (\r\n      <Paper elevation={3} sx={{ p: 4, borderRadius: 4 }}>\r\n        <Alert severity=\"error\" icon={<ErrorIcon fontSize=\"large\" />}>\r\n          <Typography variant=\"h6\">Scan Failed</Typography>\r\n          <Typography variant=\"body2\">Please try again or check your network connection</Typography>\r\n        </Alert>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 4, borderRadius: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n          Scan Results Overview\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<DownloadIcon />}\r\n          onClick={generatePdfReport}\r\n          sx={{ borderRadius: 2 }}\r\n        >\r\n          Download Full Report\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Rest of the component remains the same */}\r\n    </Paper>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}