{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\final_api\\\\frontend\\\\src\\\\components\\\\ScanForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Paper, Typography, Grid, LinearProgress, Alert, Box } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScanForm({\n  onScanStarted\n}) {\n  _s();\n  const [url, setUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url,\n          max_pages: 10,\n          threads: 5\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to start scan');\n      }\n      const data = await response.json();\n      onScanStarted(data.scan_id);\n    } catch (error) {\n      setError(error.message || 'An error occurred while starting the scan');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 4,\n      borderRadius: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 600\n      },\n      children: \"Start New Security Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Target URL\",\n            variant: \"outlined\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            placeholder: \"https://example.com\",\n            required: true,\n            disabled: isLoading,\n            InputProps: {\n              sx: {\n                borderRadius: 3\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            disabled: isLoading,\n            endIcon: !isLoading && /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 38\n            }, this),\n            sx: {\n              py: 1.5,\n              borderRadius: 3,\n              textTransform: 'none',\n              fontSize: 16,\n              '&:hover': {\n                transform: 'translateY(-1px)',\n                boxShadow: 3\n              }\n            },\n            children: isLoading ? 'Initializing Scan...' : 'Start Security Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n            sx: {\n              height: 8,\n              borderRadius: 4,\n              '& .MuiLinearProgress-bar': {\n                borderRadius: 4\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        children: \"By starting a scan, you agree to our responsible disclosure policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanForm, \"0PJetJhWIR+75EZMDTIR2+2m8JY=\");\n_c = ScanForm;\nvar _c;\n$RefreshReg$(_c, \"ScanForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Paper","Typography","Grid","LinearProgress","Alert","Box","SendIcon","jsxDEV","_jsxDEV","ScanForm","onScanStarted","_s","url","setUrl","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","max_pages","threads","ok","Error","data","json","scan_id","message","elevation","sx","p","borderRadius","mb","children","variant","component","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","container","spacing","item","xs","fullWidth","label","value","onChange","target","placeholder","required","disabled","InputProps","type","size","endIcon","py","textTransform","fontSize","transform","boxShadow","height","mt","textAlign","color","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/final_api/frontend/src/components/ScanForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Box\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nexport default function ScanForm({ onScanStarted }) {\r\n  const [url, setUrl] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/scan', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          url,\r\n          max_pages: 10,\r\n          threads: 5\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to start scan');\r\n      }\r\n\r\n      const data = await response.json();\r\n      onScanStarted(data.scan_id);\r\n    } catch (error) {\r\n      setError(error.message || 'An error occurred while starting the scan');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 4, borderRadius: 4, mb: 4 }}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ fontWeight: 600 }}>\r\n        Start New Security Scan\r\n      </Typography>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Target URL\"\r\n              variant=\"outlined\"\r\n              value={url}\r\n              onChange={(e) => setUrl(e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              required\r\n              disabled={isLoading}\r\n              InputProps={{\r\n                sx: { borderRadius: 3 }\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              disabled={isLoading}\r\n              endIcon={!isLoading && <SendIcon />}\r\n              sx={{\r\n                py: 1.5,\r\n                borderRadius: 3,\r\n                textTransform: 'none',\r\n                fontSize: 16,\r\n                '&:hover': {\r\n                  transform: 'translateY(-1px)',\r\n                  boxShadow: 3\r\n                }\r\n              }}\r\n            >\r\n              {isLoading ? 'Initializing Scan...' : 'Start Security Scan'}\r\n            </Button>\r\n          </Grid>\r\n\r\n          {isLoading && (\r\n            <Grid item xs={12}>\r\n              <LinearProgress \r\n                sx={{ \r\n                  height: 8,\r\n                  borderRadius: 4,\r\n                  '& .MuiLinearProgress-bar': {\r\n                    borderRadius: 4\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n\r\n      <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          By starting a scan, you agree to our responsible disclosure policy\r\n        </Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,IAAI,EACJC,cAAc,EACdC,KAAK,EACLC,GAAG,QACE,eAAe;AACtB,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMqB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,IAAI,CAAC;IACdF,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,GAAG;UACHgB,SAAS,EAAE,EAAE;UACbC,OAAO,EAAE;QACX,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCvB,aAAa,CAACsB,IAAI,CAACE,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACmB,OAAO,IAAI,2CAA2C,CAAC;IACxE,CAAC,SAAS;MACRpB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA,CAACR,KAAK;IAACoC,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,YAAY,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACxDjC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACP,EAAE,EAAE;QAAEQ,UAAU,EAAE;MAAI,CAAE;MAAAJ,QAAA,EAAC;IAE9E;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAEZjC,KAAK,iBACJR,OAAA,CAACJ,KAAK;MAAC8C,QAAQ,EAAC,OAAO;MAACb,EAAE,EAAE;QAAEG,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EACnCzB;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAEDzC,OAAA;MAAM2C,QAAQ,EAAEjC,YAAa;MAAAuB,QAAA,eAC3BjC,OAAA,CAACN,IAAI;QAACkD,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAZ,QAAA,gBACzBjC,OAAA,CAACN,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAd,QAAA,eAChBjC,OAAA,CAACV,SAAS;YACR0D,SAAS;YACTC,KAAK,EAAC,YAAY;YAClBf,OAAO,EAAC,UAAU;YAClBgB,KAAK,EAAE9C,GAAI;YACX+C,QAAQ,EAAGxC,CAAC,IAAKN,MAAM,CAACM,CAAC,CAACyC,MAAM,CAACF,KAAK,CAAE;YACxCG,WAAW,EAAC,qBAAqB;YACjCC,QAAQ;YACRC,QAAQ,EAAEjD,SAAU;YACpBkD,UAAU,EAAE;cACV3B,EAAE,EAAE;gBAAEE,YAAY,EAAE;cAAE;YACxB;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPzC,OAAA,CAACN,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAd,QAAA,eAChBjC,OAAA,CAACT,MAAM;YACLyD,SAAS;YACTS,IAAI,EAAC,QAAQ;YACbvB,OAAO,EAAC,WAAW;YACnBwB,IAAI,EAAC,OAAO;YACZH,QAAQ,EAAEjD,SAAU;YACpBqD,OAAO,EAAE,CAACrD,SAAS,iBAAIN,OAAA,CAACF,QAAQ;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACpCZ,EAAE,EAAE;cACF+B,EAAE,EAAE,GAAG;cACP7B,YAAY,EAAE,CAAC;cACf8B,aAAa,EAAE,MAAM;cACrBC,QAAQ,EAAE,EAAE;cACZ,SAAS,EAAE;gBACTC,SAAS,EAAE,kBAAkB;gBAC7BC,SAAS,EAAE;cACb;YACF,CAAE;YAAA/B,QAAA,EAED3B,SAAS,GAAG,sBAAsB,GAAG;UAAqB;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAENnC,SAAS,iBACRN,OAAA,CAACN,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAd,QAAA,eAChBjC,OAAA,CAACL,cAAc;YACbkC,EAAE,EAAE;cACFoC,MAAM,EAAE,CAAC;cACTlC,YAAY,EAAE,CAAC;cACf,0BAA0B,EAAE;gBAC1BA,YAAY,EAAE;cAChB;YACF;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEPzC,OAAA,CAACH,GAAG;MAACgC,EAAE,EAAE;QAAEqC,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAlC,QAAA,eACtCjC,OAAA,CAACP,UAAU;QAACyC,OAAO,EAAC,SAAS;QAACkC,KAAK,EAAC,eAAe;QAAAnC,QAAA,EAAC;MAEpD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAACtC,EAAA,CAhHuBF,QAAQ;AAAAoE,EAAA,GAARpE,QAAQ;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}